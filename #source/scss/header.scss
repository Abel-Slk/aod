//====================================================================================================

// тут сложность в том что у нас меню якобы разбито на две части до лево слева и справа и в первую очередь хочется здесь сделать некие три колонки наверное или что-то в этом роде но я предлагаю все-таки сделать в меню одним цельным просто здесь между как бы вот этими двумя пунктами work и shop задать отступы большие и внутрь из-за образовавшегося пространства поместить логотип. это просто как один из вариантов для того чтобы не разбивать меню. в любом случае при добавлении еще пунктов меню у нас меню не сможет быть по центру при любом из способов - поэтому здесь этот способ я считаю довольно таки уместным

.header {
	// чтобы header and img не шли друг за другом а были наложены друг на друга:
	position: absolute; // в уроке про правильное адаптивное меню мы делали position: fixed у header и у нава .header__menu. Здесь мы делаем это только у нава (здесь нав называется menu__body но он точно такой же как и там). А у хедера тут мы делаем position: absolute - видимо потому что хедер нестандартный - ложится на фулскриновое изображение и/или содержит абсолютно позиционированное лого
	width: 100%;
	z-index: 50;

	top: 35px;
	@media (max-width: 767px){
		top: 15px;
	}
}
.header__row {
	@include flexbox();
	justify-content: center;
	align-items: center;

	height: 85px; // после абс позиционирования логотипа header__logo высоту header__row потерял (высота уже не задается высотой логотипа) - поэтому header__row схлопнулся по высоте до высоты элементов меню - те текста. Поэтому зададим здесь для row высоту чтобы у нас все flex элементы могли нормально выстроиться вертикально по центру
}
.header__menu {}
.header__logo {
	position: absolute;
	left: 50%;
	top: 0;
	@include tr(-50%, 0px, 0px);

	z-index: 2; // можно еще задать ему все-таки z-indexчтобы он наверняка был виден - мало ли как у вас тут код пойдет
}
.menu {
	&__list {
		@include flexbox(); // в header__row получается мы использовали flexbox просто чтобы список как flex-ЭЛЕМЕНТ расположить по центру горизонтально и вертикально - а здесь мы уже сам список раскладываем в строку
		li{
			padding: 0px 37.5px; // между эл-ми списка у нас 75пикс в макете - зададим паддинг по 37.5 с обеих сторон у каждого
			// нам нужно разделить наше меню на эти две как бы половины чтобы все было по макету для этого можно использовать либо бэм модификаторы либо псевдо-классы я буду использовать псевдоклассы
			&:nth-child(2){
				padding: 0px 110px 0px 37.5px; //  между эл-ми 2 и 3 расстояние 220 пикселей - поэтому здесь у меня справа должен быть 110 пикселей а там слева 110
			}
			&:nth-child(3){
				padding: 0px 37.5px 0px 110px;
			}


			position: relative;
			&:after{ // точки сделаем псевдоэл-том
				content: '';
				width: 2px;
				height: 2px;
				background-color: #4d4959;
				border-radius: 50%;
				position: absolute;
				right: 0; // it will be placed right after li's right PADDING (37.5px)
				top: 50%;
				margin: -1.5px 0px 0px 0px; // хотим сделать чтобы точка была по центру вертикально (хоть в макете и не так). Для этого делаем top: 50% и центрируем с пом отриц маргинов - "притянем за уши" наверх на половину высоты эл-та 1 пикс ( потом сделали немного побольше чтобы поднять визуально)
			}
			&:nth-child(2),
			&:last-child{
				&:after{
					display: none;
				}
			}

		}
	}
	.menu__link { // for some reason &__link is highlighted red here
		color: #4d4959;
		font-size: 13px;
		font-weight: 700;
		text-transform: uppercase;
		letter-spacing: 2.6px;
	}

	@media (max-width: 767px){ // меню начинает вести себя не оч при уменьшении около 700 пикс - поэтому заменим там на бургер. Но размер возьмем немного с запасом - всегда лучше брать немного с запасом - на случай если ех пункт поменяется (видимо размер шрифта). Возьмем ех все что меньше ширины планшета 768
		&__body{
			position: fixed; // чтобы было зафиксировано во вьюпорте и нельзя было прокрутить за меню
			width: 100%;
			height: 100%; // чтобы выезжало на весь экран телефона
			top: 0;
			left: 0;
			background-color: #4d4959;
			padding: 150px 0px 20px 0px; // место под лого - чтобы пункты меню начинались ниже
			overflow: auto; // чтобы позволить прокручиваться внутри меню


			@include tr(0px, -100%, 0px); // изначально уберу его transform вверх
			@include anim(0.3s, 0s); // transition
			&.active{ 
				@include tr(0px, 0, 0px); // при active мы его вернем
			}
		}
		&__list{
			flex-direction: column;
			justify-content: center;
			align-items: center;
			li{
				// padding: 0 !important; // можно так - но не очень люблю пользоваться important - это быстрее но для наглядности я все таки вручную поубираю везде паддинги:
				padding: 0 0 45px 0; // а снизу наоборот теперь надо добавить
				&:nth-child(2),
				&:nth-child(3){
					padding: 0 0 45px 0;
					&:after{
						display: block; // показать точку
					}
				}
				&:last-child{
					padding: 0;
				}
				&:after{
					width: 4px;
					height: 4px;
					background-color: #fff;
					right: 50%;
					top: 40px; // сверху вручную подберем
					margin: 0px -2px 0px 0px; // сначала справа отодвинули влево через right: 50% и теперь притягиваем назад вправо на половину ширины эл-та
				}
			}
		}
		.menu__link{ // for some reason &__link is highlighted red here - and changing color inside doesn't work! Tried .menu__link - and it worked!
			color: #fff;
			font-size: 20px; // как я говорил выпуске про адаптив стоит увеличивать шрифт таких элементов вот как раз как это навигационных элементов потому что пальцы мужские большие и чтобы не промахнуться 
		}
	}
}

.icon-menu { // бургер
	@media (max-width: 767px){ // только для мал экранов
		display: block;
		position: absolute;
		top: 24px;
		right: 10px;
		width:30px;
		height: 18px;
		cursor: pointer;
		z-index: 5;
		span{ // общие стили для всех трех spanов (всех трех полосок)
			@include anim(0.3s,0s);
			top: 8px;
			left: 0px;
			position: absolute;
			width: 100%;
			height: 2px;
			background-color: #4d4959; // изначально ему поставим вот этот цвет но когда он активный поставим уже беленький цвет ниже
			&:first-child{top: 0px;} // для первой полоски
			&:last-child{top: auto;bottom: 0px;} // для последней полоски
		}
		&.active{
			span{
				background-color: #fff;
				@include scale(0);
				&:first-child{@include rotate(-45deg);top: 8px;}
				&:last-child{@include rotate(45deg);bottom: 8px;}
			}
		}
	}
}
